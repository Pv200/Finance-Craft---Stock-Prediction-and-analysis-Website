<%- include('partials/header3.ejs'); -%>
<h1 id="stockDataHeading">STOCK ANALYSIS</h1>
<div class="heading-stock-div">
    <form id="symbolForm" action="/daily-data" method="GET">
        <label id="symbol-card" for="symbolInput">Enter Symbol</label>
        <br>
        <br>
        <input type="text" id="symbolInput" name="symbol" placeholder="AAPL" required>
        <br>
        <br>
        <button id="fetchData" type="submit">Fetch Data</button>
      </form>
</div>
<div id="symbolContainer">
  <!-- Stock symbol will be displayed here -->
</div>
<table id="dataTable" border="1">
  <thead>
    <tr>
      <th>Date</th>
      <th>Open</th>
      <th>High</th>
      <th>Low</th>
      <th>Close</th>
      <th>Volume</th>
    </tr>
  </thead>
  <tbody id="dataBody"></tbody>
</table>
<script>
  function fetchData(symbol) {
    // Make a GET request to your Express.js route with the entered symbol
    fetch(`/daily-data?symbol=${symbol}`)
      .then(response => response.json())
      .then(data => {
        // Get the table body element
        const dataBody = document.getElementById('dataBody');

        // Clear any previous data in the table
        dataBody.innerHTML = '';

        // Extract only the first 15 date keys
        const dateKeys = Object.keys(data['Time Series (Daily)']).slice(0, 15);

        // Iterate through the first 15 dates and add rows to the table
        dateKeys.forEach(date => {
          const rowData = data['Time Series (Daily)'][date];
          const row = document.createElement('tr');

          // Add columns for Date, Open, High, Low, Close, and Volume
          row.innerHTML = `
            <td>${date}</td>
            <td>${rowData['1. open']}</td>
            <td>${rowData['2. high']}</td>
            <td>${rowData['3. low']}</td>
            <td>${rowData['4. close']}</td>
            <td>${rowData['5. volume']}</td>
          `;

          // Append the row to the table body
          dataBody.appendChild(row);
        });

        // Display the stock symbol above the table
        const symbolContainer = document.getElementById('symbolContainer');
        symbolContainer.innerHTML = `<h2>Symbol: ${symbol}</h2>`;
      })
      .catch(error => {
        console.error('Error fetching data:', error);
        document.getElementById('dataOutput').textContent = 'Error fetching data';
      });
  }

  document.getElementById('symbolForm').addEventListener('submit', function(event) {
    event.preventDefault(); // Prevent the form from submitting

    // Get the user-entered symbol
    const symbolInput = document.getElementById('symbolInput').value;

    // Call the fetchData function with the new symbol
    fetchData(symbolInput);
  });

  // Fetch initial data with a default symbol (e.g., 'AAPL')
  fetchData('AAPL');
</script>
<br>
<br>
<div class="ta-button">
    <h1 id="stockDataHeading">Technical Analysis</h1>
    <a href="http://localhost:8866/" target="_blank">
        <button class="jupyter-button">Click Here</button>
    </a>
</div>

</body>
</html>
